version: '3.8'

services:

  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ground_write_db
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypassword
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-config.cnf:/etc/mysql/conf.d/mysql-config.cnf
      - ./mysql-init.sql:/docker-entrypoint-initdb.d/mysql-init.sql
    command: --default-authentication-plugin=mysql_native_password
      --binlog-format=ROW
      --binlog-row-image=FULL
      --server-id=1
      --log-bin=mysql-bin
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "myuser", "-pmypassword" ]
      interval: 30s
      timeout: 10s
      retries: 5

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: ground_read_db
    volumes:
      - mongodb_data:/data/db
      - ./mongodb/init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongodb:27017/ground_read_db -u root -p root --quiet
      interval: 30s
      timeout: 10s
      retries: 5

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    depends_on:
      - mongodb
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_SERVER: mongodb
    networks:
      - app-network

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: root
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 10s
      retries: 5

  minio-init:
    image: minio/mc
    container_name: minio-init
    depends_on:
      - minio
    networks:
      - app-network
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 root root;
      /usr/bin/mc mb myminio/ground-bucket;
      /usr/bin/mc policy set public myminio/ground-bucket;
      exit 0;
      "

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
  mongodb_data:
  minio_data: