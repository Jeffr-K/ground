version: '3.8'

services:

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml
      - source: prometheus_rules
        target: /etc/prometheus/rules/rules.yml
    networks:
      - app-network
    depends_on:
      - redis-exporter

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    ports:
      - "9093:9093"
    configs:
      - source: alertmanager_config
        target: /etc/alertmanager/alertmanager.yml
    restart: unless-stopped
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - app-network

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    networks:
      - app-network

  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis-exporter
    ports:
      - "9121:9121"
    command:
      - '--redis.addr=redis-session://redis-session:6379'
      - '--redis.addr=redis-cache://redis-cache:6379'
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - redis-session
      - redis-cache

volumes:
  prometheus_data:
  grafana_data:

networks:
  app-network:
    driver: bridge

configs:
  prometheus_config:
    content: |
      global:
        scrape_interval: 15s
        evaluation_interval: 15s
      alerting:
        alertmanagers:
          - static_configs:
              - targets:
                - alertmanager:9093
      rule_files:
        - "/etc/prometheus/rules/rules.yml"
      scrape_configs:
        - job_name: 'prometheus'
          static_configs:
            - targets: ['localhost:9090']
        - job_name: 'node-exporter'
          static_configs:
            - targets: ['node-exporter:9100']
        - job_name: 'redis-exporter'
          static_configs:
            - targets: ['redis-exporter:9121']
          metrics_path: /metrics
        - job_name: 'spring-app'
          metrics_path: '/actuator/prometheus'
          static_configs:
            - targets: ['app:8080']

  prometheus_rules:
    content: |
      groups:
      - name: redis_alerts
        rules:
        - alert: RedisDown
          expr: redis_up == 0
          for: 1m
          labels:
            severity: critical
          annotations:
            summary: "Redis instance is down"
            description: "Redis instance {{ $labels.instance }} of job {{ $labels.job }} has been down for more than 1 minute."
        - alert: RedisHighMemoryUsage
          expr: redis_memory_used_bytes / redis_memory_max_bytes * 100 > 80
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: "Redis high memory usage"
            description: "Redis instance {{ $labels.instance }} of job {{ $labels.job }} is using more than 80% of its available memory for more than 5 minutes."
        - alert: RedisTooManyConnections
          expr: redis_connected_clients > 100
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: "Redis too many connections"
            description: "Redis instance {{ $labels.instance }} of job {{ $labels.job }} has more than 100 connections for more than 5 minutes."
      
      - name: node_alerts
        rules:
        - alert: HighCPULoad
          expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: "High CPU load"
            description: "CPU load is > 80% for more than 5 minutes on {{ $labels.instance }}"
      
        - alert: HighMemoryUsage
          expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100 > 85
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: "High memory usage"
            description: "Memory usage is > 85% for more than 5 minutes on {{ $labels.instance }}"
      
        - alert: HighDiskUsage
          expr: 100 - ((node_filesystem_avail_bytes * 100) / node_filesystem_size_bytes) > 85
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: "High disk usage"
            description: "Disk usage is > 85% for more than 5 minutes on {{ $labels.instance }} mount point {{ $labels.mountpoint }}"

  alertmanager_config:
    content: |
      global:
        resolve_timeout: 5m
      
      route:
        group_by: ['alertname', 'job']
        group_wait: 30s
        group_interval: 5m
        repeat_interval: 12h
        receiver: 'web.hook'
      
      receivers:
      - name: 'web.hook'
        webhook_configs:
        - url: 'http://127.0.0.1:5001/'
      
      inhibit_rules:
        - source_match:
            severity: 'critical'
          target_match:
            severity: 'warning'
          equal: ['alertname', 'instance']