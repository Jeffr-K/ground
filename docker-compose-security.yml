version: '3.8'

services:
  # ===== HashiCorp Vault - 시크릿 관리 =====
  vault:
    image: vault:1.13
    container_name: vault
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "root-token-12345"
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
      VAULT_ADDR: "http://0.0.0.0:8200"
    cap_add:
      - IPC_LOCK
    volumes:
      - vault-data:/vault/data
    command: server -dev
    networks:
      - security-network
      - app-network
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ===== Vault UI =====
  vault-ui:
    image: djenriquez/vault-ui
    container_name: vault-ui
    ports:
      - "8100:8000"
    environment:
      VAULT_URL_DEFAULT: "http://vault:8200"
      VAULT_AUTH_DEFAULT: TOKEN
    networks:
      - security-network
    depends_on:
      - vault

  # ===== Keycloak - OAuth2/OIDC 인증 서버 =====
  keycloak-db:
    image: postgres:13
    container_name: keycloak-db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data
    networks:
      - security-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "keycloak"]
      interval: 30s
      timeout: 10s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:21.1
    container_name: keycloak
    command: start-dev --import-realm
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    volumes:
      - ./keycloak/realms:/opt/keycloak/data/import
    networks:
      - security-network
      - app-network
    depends_on:
      - keycloak-db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ===== NGINX - API 보안 게이트웨이 =====
  security-gateway:
    image: nginx:alpine
    container_name: security-gateway
    ports:
      - "8443:443"
    volumes:
      - ./nginx/security.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/certs:/etc/nginx/certs
    networks:
      - security-network
      - app-network
    depends_on:
      - keycloak
      - vault

networks:
  security-network:
    driver: bridge
  app-network:
    external: true

volumes:
  vault-data:
  keycloak-db-data: